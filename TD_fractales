#exercice 0
#2) import turtle

#3) dir(turtle)

#4) help(turtle.forward)

#5)
forward(50)
left(90)
forward(150)
left(90)
forward(50)
left(90)
forward(150)
penup()
left(180)
forward(150)
right(90)
forward(50)
left(90)
forward(40)
pendown()
circle(25)

#6) from turtle import forward,left,right,penup,pendown,forward,speed,circle

#exercice 1
import turtle

#Q3
def dessine(n):
    if n <= 0:
        return None
    else :
        turtle.forward(n)
        turtle.right(90)
        return dessine(n-2)
dessine(20)

#Q4
def dessine(n):
    if n <= 0:
        return None
    else :
        turtle.forward(n)
        turtle.right(90)
        return dessine(n-10)
dessine(500)

#Q5.a
def dessine_iteratif(n):
    k = n
    while k > 0:
        turtle.forward(k)
        turtle.right(90)
        k = k - 2
dessine_iteratif(20)

#Q6
def dessine_V2(n,compteur):
    if n <= 0:
        return compteur - 1
    else :
        turtle.forward(n)
        turtle.right(90)
        return dessine_V2(n-2,compteur + 1)
print(dessine_V2(20,0))

#exercice 2
import turtle as t
t.goto(0,0)

def vonKoch(n,l):
    if n == 0:
        t.forward(l)
    else :
        vonKoch(n-1, l/3)
        t.left(60)
        vonKoch(n-1, l/3)
        t.right(120)
        vonKoch(n-1, l/3)
        t.left(60)
        vonKoch(n-1, l/3)
vonKoch(3,500)

def flocon(n,l):
    t.speed(50)
    for i in range(n):
        vonKoch(n,l)
        t.right(120)
flocon(3,500)

#exercice 3
import turtle as t
t.goto(0,0)

#1)
def carre(c):
    for i in range(4):
        t.forward(c)
        t.right(90)
carre(100)
